## Customize the test machine
machine:
  java:
    version: oraclejdk8
#  services:
#    - docker #commented out because we're using a daemon on the host
  # Add some environment variables
  environment:
    # dev, qa and prod are available for use
    QANAMESPACE: qa
    PRODNAMESPACE: prod
    KUBEPASSWORD: IHOETEzTrzO7piuu
    KUBEIP: 52.89.146.10
    KUBEDEPLOYMENTDIR: ./deploy # update this to the directory where your yaml\json files are for kubernetes
    # used for interpod and interservice communication
    # Must be lowercase and <= 24 characters
    SERVICENAME: $(tr [A-Z] [a-z] <<< ${CIRCLE_PROJECT_USERNAME:0:8})-$(tr [A-Z] [a-z] <<< ${CIRCLE_PROJECT_REPONAME:0:15})
    # used for the percona mysql cluster
    #  MYSQLNAME: pxc-$(tr [A-Z] [a-z] <<< ${CIRCLE_PROJECT_USERNAME:0:8})-$(tr [A-Z] [a-z] <<< ${CIRCLE_PROJECT_REPONAME:0:8})
    # the docker repo
    DOCKER_HOST: unix:///tmp/docker.sock
    DOCKER_REGISTRY: docker-registry.concur.com
    # the docker container
    CONTAINER1: ${CIRCLE_PROJECT_USERNAME}/me-$(tr [A-Z] [a-z] <<< ${CIRCLE_PROJECT_REPONAME})

# Customize checkout
# checkout:
#  post:
#    - git submodule sync
#    - git submodule update --init # use submodules

## Customize dependencies
dependencies:
  cache_directories:
    - "~/.kube"
    - "~/.m2"
  override:
    - mvn clean install  
    - mkdir -p /home/ubuntu/.kube
    - ls -la ~/.kube
    - docker images
    - docker ps
    - docker build -t ${DOCKER_REGISTRY}/${CONTAINER1} .
    - docker tag ${DOCKER_REGISTRY}/${CONTAINER1}:latest ${DOCKER_REGISTRY}/${CONTAINER1}:build${CIRCLE_BUILD_NUM}

test:
  override:
    # run the container and add a label
    # do not specify a local port since the docker daemon is shared
    - docker run -p 8080 -d --label ${CONTAINER1} ${DOCKER_REGISTRY}/${CONTAINER1}:latest
    # show how to execute a command in your container
    # - docker exec $(docker ps -a -q --filter "label=${CONTAINER1}") 
    # TODO - change with mvn test?
    # - npm test 
    # stop the container
    - docker stop $(docker ps -a -q --filter "label=${CONTAINER1}")
    # cleanup any stopped containers
    - docker rm $(docker ps -a -q)
    

deployment:
  qa:
    branch: master
    commands:
       - docker push ${DOCKER_REGISTRY}/${CONTAINER1}:build${CIRCLE_BUILD_NUM}
       - docker push ${DOCKER_REGISTRY}/${CONTAINER1}:latest
       - chmod +x ./deploy/deploy-service.sh && ./deploy/deploy-service.sh nonprod ${QANAMESPACE} "./deploy" latest
        # deploy mysql async cluster
#       - chmod +x ./deploy/mysql/deploy-mysql-node.sh && ./deploy/mysql/deploy-mysql-node.sh 1 ${QANAMESPACE}
#       - ./deploy/mysql/deploy-mysql-node.sh 2 ${QANAMESPACE}
#       - ./deploy/mysql/deploy-mysql-node.sh 3 ${QANAMESPACE}
       #basic integration test
       - curl -k https://admin:${KUBEPASSWORD}@${KUBEIP}/api/v1/proxy/namespaces/${QANAMESPACE}/services/${SERVICENAME}
       - ./deploy/deploy-service.sh nonprod ${PRODNAMESPACE}  "./deploy" latest
       - curl -k https://admin:${KUBEPASSWORD}@${KUBEIP}/api/v1/proxy/namespaces/${PRODNAMESPACE}/services/${SERVICENAME}

